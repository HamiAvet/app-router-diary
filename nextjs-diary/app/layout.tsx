import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import NotificationProvider from "./NotificationProvider";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

/*  if ('serviceWorker' in navigator) {

// Регистрируем сервисный рабочий процесс

navigator.serviceWorker.register('/notificationapi-service-worker.js')

.then(function(registration) {

console.log('Сервисный рабочий процесс зарегистрирован с областью:', registration.scope);

})

.catch(function(error) {

console.error('Ошибка при регистрации сервисного рабочего процесса:', error);

});

}*/
  
return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <NotificationProvider>
        {children}
        </NotificationProvider>
      </body>
    </html>
  );
}
